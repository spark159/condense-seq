#!/bin/bash -l

#SBATCH
#SBATCH --job-name=maketable
#SBATCH --time=12:0:0
#SBATCH --partition=parallel
#SBATCH --nodes=1
# number of tasks (processes) per node
#SBATCH --ntasks-per-node=10
# number of cpus (threads) per task (process)

#### load and unload modules you may need
# module unload openmpi/intel
# module load mvapich2/gcc/64/2.0b
# module list
#module load bowtie2
#module load python/2.7
#module load samtools
#module list


#### parsing arguments
OPTIND=1
while getopts f:x:w:s:o:c:b:h:e:g: option
do                                                                                                                           
  case "${option}"                                                                                    
  in
      f) fname=$OPTARG ;;
      x) refname=$OPTARG ;;
      w) binsize=$OPTARG ;;
      s) binstep=$OPTARG ;;
      o) outfname=$OPTARG ;;
      e) extra=$OPTARG ;;

      c)  set -f
          IFS=','
          chr_list=($OPTARG)
	  unset IFS ;;

      b)  set -f
	  IFS=':'
	  bsfiles=($OPTARG)
	  unset IFS ;;
      
      h)  set -f
	  IFS=':'
	  chipfiles=($OPTARG)
	  unset IFS ;;

      g)  set -f
	  IFS=':'
	  gtabfiles=($OPTARG)
	  unset IFS ;;
            
  esac                                                                                                                       
done
set +o noglob
#set +f

echo
echo Submitted
echo "fname $fname"
echo "refname $refname"
echo "chr ${chr_list[*]}"
echo "outfname $outfname"

binsize_input=()
if [[ -n $binsize ]];then
   binsize_input=("--binsize" $binsize)
   echo "binsize $binsize"
fi

binstep_input=()
if [[ -n $binstep ]];then
   binstep_input=("--binstep" $binstep)
   echo "binstep $binstep"
fi

bs_input=()
for item in "${bsfiles[@]}"; do
    IFS=','; itemarray=($item); unset IFS;
    bs_input=("${bs_input[@]}" "--bs" ${itemarray[@]})
    echo "bs_input ${itemarray[@]}"
done

chip_input=()
for item in "${chipfiles[@]}"; do
    IFS=','; itemarray=($item); unset IFS;
    chip_input=("${chip_input[@]}" "--chip" ${itemarray[@]})
    echo "chip_input ${itemarray[@]}"
done

gtab_input=()
for item in "${gtabfiles[@]}"; do
    IFS=','; itemarray=($item); unset IFS;
    gtab_input=("${gtab_input[@]}" "--gtab" ${itemarray[@]})
    echo "gtab_input ${itemarray[@]}"
done

echo "$extra"

python2 /home/spark159/scratch/scripts/make_table_ver5.py ${fname} ${refname} --chr ${chr_list[*]} -o ${outfname} ${binsize_input[*]} ${binstep_input[*]} ${bs_input[*]} ${chip_input[*]} ${gtab_input[*]} ${extra}

echo "Finished with job $SLURM_JOBID"
echo
